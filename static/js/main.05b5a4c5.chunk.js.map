{"version":3,"sources":["components/BasicDetails.js","components/ProfileSummary.js","components/Experience.js","components/Skills.js","components/Preview.js","App.js","index.js"],"names":["BasicDetails","_ref","nextStep","handleFormData","formData","error","setError","useState","countryCode","setCountryCode","customCountryCode","setCustomCountryCode","React","createElement","className","htmlFor","id","type","placeholder","value","name","onChange","e","target","email","code","country","map","key","mobile","linkedin","onClick","handleNext","trim","test","ProfileSummary","prevStep","profileSummary","setProfileSummary","Experience","experiences","setExperiences","experience","currentExperience","setCurrentExperience","company","location","joiningDate","endDate","designation","role","dateError","setDateError","validateDates","joining","end","Date","exp","index","style","display","alignItems","margin","indexToRemove","filter","_","removeExperience","marginLeft","color","cursor","background","border","fontSize","fontWeight","title","addExperience","Skills","skills","setSkills","currentSkill","setCurrentSkill","skill","removeSkill","addSkill","Preview","generatePDF","doc","jsPDF","pageWidth","internal","pageSize","width","pageHeight","height","yPos","addText","text","size","arguments","length","undefined","addYPos","setFontSize","setFont","splitTextToSize","forEach","line","addPage","addHeader","addLine","setLineWidth","setFillColor","rect","setTextColor","align","Array","isArray","addFooter","totalPages","getNumberOfPages","i","setPage","pdfName","replace","save","App","step","setStep","setFormData","data","ReactDOM","render","document","getElementById"],"mappings":"+JA0GeA,MAxGf,SAAqBC,GAAyC,IAAxCC,SAAEA,EAAQC,eAAEA,EAAcC,SAAEA,GAAUH,EAC1D,MAAOI,EAAOC,GAAYC,mBAAS,KAC5BC,EAAaC,GAAkBF,mBAAS,OACxCG,EAAmBC,GAAwBJ,mBAAS,IA2B3D,OACEK,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,QAAO,aACtBH,IAAAC,cAAA,SACEG,GAAG,OACHC,KAAK,OACLC,YAAY,uBACZC,MAAOf,EAASgB,KAChBC,SAAWC,GAAMnB,EAAe,CAAEiB,KAAME,EAAEC,OAAOJ,WAGrDP,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,SAAQ,SACvBH,IAAAC,cAAA,SACEG,GAAG,QACHC,KAAK,QACLC,YAAY,2BACZC,MAAOf,EAASoB,MAChBH,SAAWC,GAAMnB,EAAe,CAAEqB,MAAOF,EAAEC,OAAOJ,WAGtDP,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,UAAS,iBACxBH,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UACEM,MAAOX,EACPa,SAAWC,GAAMb,EAAea,EAAEC,OAAOJ,OACzCL,UAAU,gBApCC,CACnB,CAAEW,KAAM,KAAMC,QAAS,MACvB,CAAED,KAAM,MAAOC,QAAS,MACxB,CAAED,KAAM,MAAOC,QAAS,MACxB,CAAED,KAAM,QAASC,QAAS,UAkCJC,IAAKD,GACjBd,IAAAC,cAAA,UAAQe,IAAKF,EAAQD,KAAMN,MAAOO,EAAQD,MACtB,UAAjBC,EAAQD,KAAmB,WAAaC,EAAQD,SAASC,EAAQA,cAIvD,UAAhBlB,GACCI,IAAAC,cAAA,SACEI,KAAK,OACLC,YAAY,qBACZC,MAAOT,EACPW,SAAWC,GAAMX,EAAqBW,EAAEC,OAAOJ,OAC/CL,UAAU,wBAGdF,IAAAC,cAAA,SACEG,GAAG,SACHC,KAAK,MACLC,YAAY,oCACZC,MAAOf,EAASyB,OAChBR,SAAWC,GAAMnB,EAAe,CAAE0B,OAAQP,EAAEC,OAAOJ,QACnDL,UAAU,oBAIhBF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,YAAW,2BAC1BH,IAAAC,cAAA,SACEG,GAAG,WACHC,KAAK,MACLC,YAAY,0BACZC,MAAOf,EAAS0B,UAAY,GAC5BT,SAAWC,GAAMnB,EAAe,CAAE2B,SAAUR,EAAEC,OAAOJ,WAGxDd,GAASO,IAAAC,cAAA,KAAGC,UAAU,iBAAiBT,GACxCO,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAQkB,QA7FKC,KAIZ5B,EAASgB,KAAKa,OAHA,6BAKIC,KAAK9B,EAASoB,OAJjB,cAMIU,KAAK9B,EAASyB,SAGpCvB,EAAS,IAETH,EAAe,CAAE0B,UADwB,UAAhBrB,EAA0BE,EAAoBF,KACvBJ,EAASyB,WACzD3B,KALAI,EAAS,+CAFTA,EAAS,yBAFTA,EAAS,iCAwFsB,WCxEtB6B,MA1Bf,SAAuBlC,GAAmD,IAAlDC,SAAEA,EAAQkC,SAAEA,EAAQjC,eAAEA,EAAcC,SAAEA,GAAUH,EACtE,MAAOoC,EAAgBC,GAAqB/B,mBAASH,EAASiC,gBAAkB,IAOhF,OACEzB,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,YACEK,YAAY,gCACZC,MAAOkB,EACPhB,SAAWC,GAAMgB,EAAkBhB,EAAEC,OAAOJ,UAGhDP,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAQkB,QAASK,GAAU,YAC3BxB,IAAAC,cAAA,UAAQkB,QAjBKC,KACjB7B,EAAe,CAAEkC,mBACjBnC,MAeiC,WCgItBqC,MApJf,SAAmBtC,GAAmD,IAAlDC,SAAEA,EAAQkC,SAAEA,EAAQjC,eAAEA,EAAcC,SAAEA,GAAUH,EAClE,MAAOuC,EAAaC,GAAkBlC,mBAASH,EAASsC,YAAc,KAC/DC,EAAmBC,GAAwBrC,mBAAS,CACzDsC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,YAAa,GACbC,KAAM,MAEDC,EAAWC,GAAgB7C,mBAAS,IAGrC8C,EAAgBA,CAACC,EAASC,IAC1B,IAAIC,KAAKF,IAAY,IAAIE,KAAKD,IAChCH,EAAa,mDACN,IAETA,EAAa,KACN,GAgCT,OACExC,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,cAGJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,wBACH2B,EAAYb,IAAI,CAAC8B,EAAKC,IACrB9C,IAAAC,cAAA,OAAKe,IAAK8B,EAAO5C,UAAU,kBAAkB6C,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACjFjD,IAAAC,cAAA,KAAG8C,MAAO,CAAEG,OAAQ,MAAQL,EAAIZ,QAAQ,MAAIY,EAAIX,UAChDlC,IAAAC,cAAA,UACEkB,QAASA,IArBKgC,KACxBtB,EAAeD,EAAYwB,OAAO,CAACC,EAAGP,IAAUA,IAAUK,KAoBjCG,CAAiBR,GAChCC,MAAO,CACLQ,WAAY,OACZC,MAAO,MACPC,OAAQ,UACRC,WAAY,OACZC,OAAQ,OACRC,SAAU,OACVC,WAAY,QAEdC,MAAM,qBACP,QAOP9D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEI,KAAK,OACLC,YAAY,eACZC,MAAOwB,EAAkBE,QACzBxB,SAAWC,GAAMsB,EAAqB,IAAKD,EAAmBE,QAASvB,EAAEC,OAAOJ,WAGpFP,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEI,KAAK,OACLC,YAAY,yBACZC,MAAOwB,EAAkBG,SACzBzB,SAAWC,GAAMsB,EAAqB,IAAKD,EAAmBG,SAAUxB,EAAEC,OAAOJ,WAGrFP,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,gBACPD,IAAAC,cAAA,SACEI,KAAK,OACLE,MAAOwB,EAAkBI,YACzB1B,SAAWC,IACTsB,EAAqB,IAAKD,EAAmBI,YAAazB,EAAEC,OAAOJ,QAC/DwB,EAAkBK,SACpBK,EAAc/B,EAAEC,OAAOJ,MAAOwB,EAAkBK,aAKxDpC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,SACEI,KAAK,OACLE,MAAOwB,EAAkBK,QACzB3B,SAAWC,IACTsB,EAAqB,IAAKD,EAAmBK,QAAS1B,EAAEC,OAAOJ,QAC3DwB,EAAkBI,aACpBM,EAAcV,EAAkBI,YAAazB,EAAEC,OAAOJ,WAK7DgC,GAAavC,IAAAC,cAAA,KAAGC,UAAU,iBAAiBqC,GAC5CvC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEI,KAAK,OACLC,YAAY,cACZC,MAAOwB,EAAkBM,YACzB5B,SAAWC,GAAMsB,EAAqB,IAAKD,EAAmBM,YAAa3B,EAAEC,OAAOJ,WAGxFP,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,YACEK,YAAY,6BACZC,MAAOwB,EAAkBO,KACzB7B,SAAWC,GAAMsB,EAAqB,IAAKD,EAAmBO,KAAM5B,EAAEC,OAAOJ,WAGjFP,IAAAC,cAAA,UAAQkB,QAnHU4C,KAChBhC,EAAkBE,SAAWF,EAAkBI,aAAeJ,EAAkBK,SAAWL,EAAkBM,aAAeN,EAAkBO,MAC5IG,EAAcV,EAAkBI,YAAaJ,EAAkBK,WACjEP,EAAe,IAAID,EAAaG,IAEhCC,EAAqB,CACnBC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,YAAa,GACbC,KAAM,QAwGsB,kBAEhCtC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAQkB,QAASK,GAAU,YAC3BxB,IAAAC,cAAA,UAAQkB,QAhGKC,KACjB7B,EAAe,CAAEuC,WAAYF,IAC7BtC,MA8FiC,WC3EtB0E,MAnEf,SAAe3E,GAAmD,IAAlDC,SAAEA,EAAQkC,SAAEA,EAAQjC,eAAEA,EAAcC,SAAEA,GAAUH,EAC9D,MAAO4E,EAAQC,GAAavE,mBAASH,EAASyE,QAAU,CAAC,OAAQ,iBAC1DE,EAAcC,GAAmBzE,mBAAS,IAqBjD,OACEK,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,UACGgE,EAAOlD,IAAI,CAACsD,EAAOvB,IAClB9C,IAAAC,cAAA,MAAIe,IAAK8B,GACNuB,EACDrE,IAAAC,cAAA,UACAkB,QAASA,IAnBAgC,KACnBe,EAAUD,EAAOb,OAAO,CAACC,EAAGP,IAAUA,IAAUK,KAkBvBmB,CAAYxB,GAC3BC,MAAO,CACLQ,WAAY,OACZC,MAAO,MACPC,OAAQ,UACRC,WAAY,OACZC,OAAQ,OACRC,SAAU,OACVC,WAAY,QAEdC,MAAM,qBACP,SAOP9D,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEI,KAAK,OACLC,YAAY,kBACZC,MAAO4D,EACP1D,SAAWC,GAAM0D,EAAgB1D,EAAEC,OAAOJ,SAE5CP,IAAAC,cAAA,UAAQkB,QApDGoD,KACa,KAAxBJ,EAAa9C,SACf6C,EAAU,IAAID,EAAQE,IACtBC,EAAgB,OAiDa,cAE7BpE,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAQkB,QAASK,GAAU,YAC3BxB,IAAAC,cAAA,UAAQkB,QA3CKC,KACjB7B,EAAe,CAAE0E,OAAQA,IACzB3E,MAyCiC,kBCyFtBkF,MArJf,SAAgBnF,GAAyB,IAAxBmC,SAAEA,EAAQhC,SAAEA,GAAUH,EA+GrC,OACEW,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,SAAc,IAAET,EAASgB,MACpCR,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,IAAET,EAASoB,OACrCZ,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,WAAgB,IAAET,EAASyB,QACtCjB,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,aAAkB,IAAET,EAAS0B,UAAY,OACpDlB,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,aAAkB,IAAET,EAAS0C,UAAY,IAEpDlC,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,SAAIT,EAASiC,gBAEbzB,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UACGT,EAASyE,OAAOlD,IAAI,CAACsD,EAAOvB,IAC3B9C,IAAAC,cAAA,MAAIe,IAAK8B,GAAQuB,KAIrBrE,IAAAC,cAAA,UAAI,cACHT,EAASsC,WAAWf,IAAI,CAAC8B,EAAKC,IAC7B9C,IAAAC,cAAA,OAAKe,IAAK8B,GACR9C,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAS4C,EAAIZ,QAAQ,MAAIY,EAAIR,cAChCrC,IAAAC,cAAA,SAAI4C,EAAIV,YAAY,OAAKU,EAAIT,SAC7BpC,IAAAC,cAAA,SAAI4C,EAAIP,SAIdtC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAQkB,QAASK,GAAU,YAC3BxB,IAAAC,cAAA,UAAQkB,QA9IMsD,KAClB,MAAMC,EAAM,IAAIC,IACVC,EAAYF,EAAIG,SAASC,SAASC,MAClCC,EAAaN,EAAIG,SAASC,SAASG,OAEzC,IAAIC,EADW,GAIf,MAAMC,EAAU,SAACC,EAAMC,GAA2C,IAArCtC,EAAKuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAAUG,IAAOH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpDZ,EAAIgB,YAAYL,GAChBX,EAAIiB,QAAQ,QAAS5C,GACH2B,EAAIkB,gBAAgBR,EAAMR,EAAY1B,IAC9C2C,QAAQC,IACZZ,EAAOF,EATA,KAUTN,EAAIqB,UACJb,EAAOhC,GACP8C,KAEFtB,EAAIU,KAAKU,EAdE,GAcYZ,GACnBO,IAASP,GAAe,IAAPG,MAKnBY,EAAUA,KACdvB,EAAIwB,aAAa,IACjBhB,GAAQ,EACRR,EAAIoB,KAvBS,GAuBIZ,EAAMN,EAvBV,GAuB8BM,GAC3CA,GAAQ,GAIJc,EAAY,WAAUV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAE1BZ,EAAIyB,aAAa,IAAK,IAAK,KAC3BzB,EAAI0B,KAAK,EAAG,EAAGxB,EAAW,GAAI,KAE9BF,EAAIiB,QAAQ,QAAS,QACrBjB,EAAIgB,YAAY,IAChBhB,EAAI2B,aAAa,EAAG,EAAG,GACvB3B,EAAIU,KAAK5F,EAASgB,KApCL,GAoCmB,IAEhCkE,EAAIgB,YAAY,IAChBhB,EAAIU,QAAQ5F,EAASyB,YAAYzB,EAASoB,QAvC7B,GAuC8C,IAE3D8D,EAAIU,QAAQ5F,EAAS0B,UAAY,QAAQ1B,EAAS0C,UAAY,KAAM0C,EAzCvD,GAyC2E,GAAI,CAAE0B,MAAO,UAErGpB,EAAO,IAqBTc,GAAU,GAGVb,EAAQ,kBAAmB,GAAI,QAC/Bc,IACAd,EAAQ3F,EAASiC,eAAgB,IAGjCyD,GAAQ,EACRC,EAAQ,SAAU,GAAI,QACtBc,IAEIM,MAAMC,QAAQhH,EAASyE,SAAWzE,EAASyE,OAAOsB,OAAS,GAC7D/F,EAASyE,OAAO4B,QAAQxB,IACtBc,YAAad,IAAS,GAAI,UAC1Ba,GAAQ,IAIZA,GAAQ,EAGRC,EAAQ,aAAc,GAAI,QAC1Bc,IAEIM,MAAMC,QAAQhH,EAASsC,aAAetC,EAASsC,WAAWyD,OAAS,GACrE/F,EAASsC,WAAW+D,QAAQhD,IAC1BsC,KAAWtC,EAAIZ,aAAaY,EAAIR,cAAe,GAAI,QACnD8C,KAAWtC,EAAIV,kBAAkBU,EAAIT,UAAW,IAChD+C,EAAQtC,EAAIP,KAAM,IAClB4C,GAAQ,IA/CMuB,MAChB,MAAMC,EAAahC,EAAIG,SAAS8B,mBAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAYE,IAC/BlC,EAAImC,QAAQD,GAGZlC,EAAIyB,aAAa,IAAK,IAAK,KAC3BzB,EAAI0B,KAAK,EAAGpB,EAAa,GAAIJ,EAAW,GAAI,KAG5CF,EAAI2B,aAAa,EAAG,EAAG,GACvB3B,EAAIgB,YAAY,IAChBhB,EAAIU,aAAawB,QAAQF,IAAc9B,EAAY,EAAGI,EAAa,GAAI,CAAEsB,MAAO,YAwCpFG,GAGA,MAAMK,KAAatH,EAASgB,KAAKuG,QAAQ,OAAQ,kBACjDrC,EAAIsC,KAAKF,KAmCyB,mBC5GvBG,MA/Bf,WACE,MAAOC,EAAMC,GAAWxH,mBAAS,IAC1BH,EAAU4H,GAAezH,mBAAS,CACvCa,KAAM,GACNI,MAAO,GACPK,OAAQ,GACRa,WAAY,GACZmC,OAAQ,KAGJ3E,EAAWA,IAAM6H,EAAQD,EAAO,GAChC1F,EAAWA,IAAM2F,EAAQD,EAAO,GAEhC3H,EAAkB8H,GAASD,EAAY,IAAK5H,KAAa6H,IAE/D,OAAQH,GACN,KAAK,EACH,OAAOlH,IAAAC,cAACb,EAAY,CAACE,SAAUA,EAAUC,eAAgBA,EAAgBC,SAAUA,IACrF,KAAK,EACH,OAAOQ,IAAAC,cAACsB,EAAc,CAACjC,SAAUA,EAAUC,eAAgBA,EAAgBC,SAAUA,IACvF,KAAK,EACH,OAAOQ,IAAAC,cAAC0B,EAAU,CAACrC,SAAUA,EAAUkC,SAAUA,EAAUjC,eAAgBA,EAAgBC,SAAUA,IACvG,KAAK,EACH,OAAOQ,IAAAC,cAAC+D,EAAM,CAAC1E,SAAUA,EAAUkC,SAAUA,EAAUjC,eAAgBA,EAAgBC,SAAUA,IACnG,KAAK,EACH,OAAOQ,IAAAC,cAACuE,EAAO,CAAChD,SAAUA,EAAUhC,SAAUA,IAChD,QACE,OAAOQ,IAAAC,cAACb,EAAY,CAACE,SAAUA,EAAUC,eAAgBA,EAAgBC,SAAUA,MC7BzF8H,IAASC,OAAOvH,IAAAC,cAACgH,EAAG,MAAKO,SAASC,eAAe","file":"static/js/main.05b5a4c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction BasicDetails({ nextStep, handleFormData, formData }) {\r\n  const [error, setError] = useState('');\r\n  const [countryCode, setCountryCode] = useState('+1'); // Default to US\r\n  const [customCountryCode, setCustomCountryCode] = useState('');\r\n\r\n  const handleNext = () => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const mobileRegex = /^[0-9]{10}$/;\r\n\r\n    if (!formData.name.trim()) {\r\n      setError('Please enter your full name');\r\n    } else if (!emailRegex.test(formData.email)) {\r\n      setError('Invalid email address');\r\n    } else if (!mobileRegex.test(formData.mobile)) {\r\n      setError('Invalid mobile number (should be 10 digits)');\r\n    } else {\r\n      setError('');\r\n      const finalCountryCode = countryCode === 'other' ? customCountryCode : countryCode;\r\n      handleFormData({ mobile: `${finalCountryCode} ${formData.mobile}` });\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  const countryCodes = [\r\n    { code: '+1', country: 'US' },\r\n    { code: '+44', country: 'UK' },\r\n    { code: '+91', country: 'IN' },\r\n    { code: 'other', country: 'Other' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Basic Details</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Full Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your full name\"\r\n          value={formData.name}\r\n          onChange={(e) => handleFormData({ name: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter your email address\"\r\n          value={formData.email}\r\n          onChange={(e) => handleFormData({ email: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"mobile\">Mobile Number</label>\r\n        <div className=\"mobile-input\">\r\n          <select \r\n            value={countryCode} \r\n            onChange={(e) => setCountryCode(e.target.value)}\r\n            className=\"country-code\"\r\n          >\r\n            {countryCodes.map((country) => (\r\n              <option key={country.code} value={country.code}>\r\n                {country.code === 'other' ? 'Other' : `${country.code} (${country.country})`}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {countryCode === 'other' && (\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter country code\"\r\n              value={customCountryCode}\r\n              onChange={(e) => setCustomCountryCode(e.target.value)}\r\n              className=\"custom-country-code\"\r\n            />\r\n          )}\r\n          <input\r\n            id=\"mobile\"\r\n            type=\"tel\"\r\n            placeholder=\"Enter your 10-digit mobile number\"\r\n            value={formData.mobile}\r\n            onChange={(e) => handleFormData({ mobile: e.target.value })}\r\n            className=\"mobile-number\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"linkedin\">LinkedIn URL (Optional)</label>\r\n        <input\r\n          id=\"linkedin\"\r\n          type=\"url\"\r\n          placeholder=\"Enter your LinkedIn URL\"\r\n          value={formData.linkedin || ''}\r\n          onChange={(e) => handleFormData({ linkedin: e.target.value })}\r\n        />\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"form-buttons\">\r\n        <button onClick={handleNext}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasicDetails;\r\n","import React, { useState } from 'react';\r\n\r\nfunction ProfileSummary({ nextStep, prevStep, handleFormData, formData }) {\r\n  const [profileSummary, setProfileSummary] = useState(formData.profileSummary || '');\r\n\r\n  const handleNext = () => {\r\n    handleFormData({ profileSummary });\r\n    nextStep();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Profile Summary</h2>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          placeholder=\"Write a brief profile summary\"\r\n          value={profileSummary}\r\n          onChange={(e) => setProfileSummary(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-buttons\">\r\n        <button onClick={prevStep}>Previous</button>\r\n        <button onClick={handleNext}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSummary;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Experience({ nextStep, prevStep, handleFormData, formData }) {\r\n  const [experiences, setExperiences] = useState(formData.experience || []);\r\n  const [currentExperience, setCurrentExperience] = useState({\r\n    company: '',\r\n    location: '',\r\n    joiningDate: '',\r\n    endDate: '',\r\n    designation: '',\r\n    role: ''\r\n  });\r\n  const [dateError, setDateError] = useState('');\r\n\r\n  // Validate the dates to ensure joining date is earlier than the end date\r\n  const validateDates = (joining, end) => {\r\n    if (new Date(joining) >= new Date(end)) {\r\n      setDateError('Joining date must be earlier than the end date');\r\n      return false;\r\n    }\r\n    setDateError('');\r\n    return true;\r\n  };\r\n\r\n  // Add the current experience to the list\r\n  const addExperience = () => {\r\n    if (currentExperience.company && currentExperience.joiningDate && currentExperience.endDate && currentExperience.designation && currentExperience.role) {\r\n      if (validateDates(currentExperience.joiningDate, currentExperience.endDate)) {\r\n        setExperiences([...experiences, currentExperience]);\r\n        // Reset the current experience fields\r\n        setCurrentExperience({\r\n          company: '',\r\n          location: '',\r\n          joiningDate: '',\r\n          endDate: '',\r\n          designation: '',\r\n          role: ''\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Remove an experience from the list\r\n  const removeExperience = (indexToRemove) => {\r\n    setExperiences(experiences.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  // Move to the next step and pass the updated experiences list to formData\r\n  const handleNext = () => {\r\n    handleFormData({ experience: experiences });\r\n    nextStep();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Experience</h2>\r\n      \r\n      {/* Display list of companies with a remove button */}\r\n      <div className=\"company-list\">\r\n        <h3>Previous Experiences</h3>\r\n        {experiences.map((exp, index) => (\r\n          <div key={index} className=\"experience-item\" style={{ display: 'flex', alignItems: 'center' }}>\r\n            <p style={{ margin: '0' }}>{exp.company} - {exp.location}</p>\r\n            <button \r\n              onClick={() => removeExperience(index)} \r\n              style={{ \r\n                marginLeft: '10px', \r\n                color: 'red', \r\n                cursor: 'pointer',\r\n                background: 'none',\r\n                border: 'none',\r\n                fontSize: '14px',\r\n                fontWeight: 'bold'\r\n              }}\r\n              title=\"Remove Experience\"\r\n            >\r\n              x\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Company Name\"\r\n          value={currentExperience.company}\r\n          onChange={(e) => setCurrentExperience({ ...currentExperience, company: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location (from Google)\"\r\n          value={currentExperience.location}\r\n          onChange={(e) => setCurrentExperience({ ...currentExperience, location: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Joining Date</label>\r\n        <input\r\n          type=\"date\"\r\n          value={currentExperience.joiningDate}\r\n          onChange={(e) => {\r\n            setCurrentExperience({ ...currentExperience, joiningDate: e.target.value });\r\n            if (currentExperience.endDate) {\r\n              validateDates(e.target.value, currentExperience.endDate);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>End Date</label>\r\n        <input\r\n          type=\"date\"\r\n          value={currentExperience.endDate}\r\n          onChange={(e) => {\r\n            setCurrentExperience({ ...currentExperience, endDate: e.target.value });\r\n            if (currentExperience.joiningDate) {\r\n              validateDates(currentExperience.joiningDate, e.target.value);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      {dateError && <p className=\"error-message\">{dateError}</p>}\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Designation\"\r\n          value={currentExperience.designation}\r\n          onChange={(e) => setCurrentExperience({ ...currentExperience, designation: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          placeholder=\"Roles and Responsibilities\"\r\n          value={currentExperience.role}\r\n          onChange={(e) => setCurrentExperience({ ...currentExperience, role: e.target.value })}\r\n        />\r\n      </div>\r\n      <button onClick={addExperience}>Add Experience</button>\r\n      \r\n      <div className=\"form-buttons\">\r\n        <button onClick={prevStep}>Previous</button>\r\n        <button onClick={handleNext}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Skills({ nextStep, prevStep, handleFormData, formData }) {\r\n  const [skills, setSkills] = useState(formData.skills || [\"Java\", \"Spring Boot\"]);\r\n  const [currentSkill, setCurrentSkill] = useState(\"\");\r\n\r\n  // Add a new skill to the list\r\n  const addSkill = () => {\r\n    if (currentSkill.trim() !== \"\") {\r\n      setSkills([...skills, currentSkill]);\r\n      setCurrentSkill(\"\");\r\n    }\r\n  };\r\n\r\n  // Remove a skill from the list\r\n  const removeSkill = (indexToRemove) => {\r\n    setSkills(skills.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  // Move to the next step and pass the updated skills list to formData\r\n  const handleNext = () => {\r\n    handleFormData({ skills: skills });\r\n    nextStep();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Skills</h2>\r\n      <div className=\"form-group\">\r\n        <ul>\r\n          {skills.map((skill, index) => (\r\n            <li key={index}>\r\n              {skill}\r\n              <button \r\n              onClick={() => removeSkill(index)} \r\n              style={{ \r\n                marginLeft: '10px', \r\n                color: 'red', \r\n                cursor: 'pointer',\r\n                background: 'none',\r\n                border: 'none',\r\n                fontSize: '14px',\r\n                fontWeight: 'bold'\r\n              }}\r\n              title=\"Remove Experience\"\r\n            >\r\n              x\r\n            </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new skill\"\r\n          value={currentSkill}\r\n          onChange={(e) => setCurrentSkill(e.target.value)}\r\n        />\r\n        <button onClick={addSkill}>Add Skill</button>\r\n      </div>\r\n      <div className=\"form-buttons\">\r\n        <button onClick={prevStep}>Previous</button>\r\n        <button onClick={handleNext}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport jsPDF from 'jspdf';\r\n\r\nfunction Preview({ prevStep, formData }) {\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    const pageWidth = doc.internal.pageSize.width;\r\n    const pageHeight = doc.internal.pageSize.height;\r\n    const margin = 20;\r\n    let yPos = margin;\r\n\r\n    // Helper function to add text with wrapping\r\n    const addText = (text, size, style = \"normal\", addYPos = true) => {\r\n      doc.setFontSize(size);\r\n      doc.setFont(\"times\", style);\r\n      const textLines = doc.splitTextToSize(text, pageWidth - margin * 2);\r\n      textLines.forEach(line => {\r\n        if (yPos > pageHeight - margin) {\r\n          doc.addPage(); // Add new page when yPos exceeds page height\r\n          yPos = margin + 20; // Reset yPos with margin on the new page\r\n          addHeader(); // Add header on the new page\r\n        }\r\n        doc.text(line, margin, yPos);\r\n        if (addYPos) yPos += size * 0.75;\r\n      });\r\n    };\r\n\r\n    // Helper function to add a line\r\n    const addLine = () => {\r\n      doc.setLineWidth(0.5);\r\n      yPos += 1;  // Small space before the line\r\n      doc.line(margin, yPos, pageWidth - margin, yPos);\r\n      yPos += 5; // Space after the line\r\n    };\r\n\r\n    // Add header for each page\r\n    const addHeader = (firstPage = false) => {\r\n      // Ash gray background\r\n      doc.setFillColor(178, 190, 181); // Ash Gray\r\n      doc.rect(0, 0, pageWidth, 30, 'F'); // Filled rectangle as header background\r\n\r\n      doc.setFont(\"times\", \"bold\");\r\n      doc.setFontSize(16);\r\n      doc.setTextColor(0, 0, 0); // Black text color\r\n      doc.text(formData.name, margin, 15);\r\n\r\n      doc.setFontSize(10);\r\n      doc.text(`${formData.mobile} | ${formData.email}`, margin, 25);\r\n\r\n      doc.text(`${formData.linkedin || ''} | ${formData.location || ''}`, pageWidth - margin, 25, { align: 'right' });\r\n      \r\n      yPos = 45; // Set yPos after the header\r\n    };\r\n\r\n    // Add footer on every page\r\n    const addFooter = () => {\r\n      const totalPages = doc.internal.getNumberOfPages();\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        doc.setPage(i);\r\n        \r\n        // Footer background color\r\n        doc.setFillColor(178, 190, 181); // Ash Gray\r\n        doc.rect(0, pageHeight - 20, pageWidth, 20, 'F'); // Filled rectangle as footer background\r\n\r\n        // Footer text\r\n        doc.setTextColor(0, 0, 0); // Black text color for footer\r\n        doc.setFontSize(10);\r\n        doc.text(`Page ${i} of ${totalPages}`, pageWidth / 2, pageHeight - 10, { align: \"center\" });\r\n      }\r\n    };\r\n\r\n    // Start generating PDF content\r\n    addHeader(true);\r\n\r\n    // Add Profile Summary Section\r\n    addText(\"Profile Summary\", 14, \"bold\");\r\n    addLine();\r\n    addText(formData.profileSummary, 12);\r\n\r\n    // Skills Section\r\n    yPos += 5;\r\n    addText(\"Skills\", 14, \"bold\");\r\n    addLine();\r\n\r\n    if (Array.isArray(formData.skills) && formData.skills.length > 0) {\r\n      formData.skills.forEach(skill => {\r\n        addText(`• ${skill}`, 12, \"normal\");\r\n        yPos += 3;  // Ensure space after each skill to prevent overlapping\r\n      });\r\n    }\r\n\r\n    yPos += 2;\r\n\r\n    // Experience Section\r\n    addText(\"Experience\", 14, \"bold\");\r\n    addLine();\r\n\r\n    if (Array.isArray(formData.experience) && formData.experience.length > 0) {\r\n      formData.experience.forEach(exp => {\r\n        addText(`${exp.company} - ${exp.designation}`, 12, \"bold\");\r\n        addText(`${exp.joiningDate} to ${exp.endDate}`, 12);\r\n        addText(exp.role, 12);\r\n        yPos += 2;\r\n      });\r\n    }\r\n\r\n    // Add footer to all pages\r\n    addFooter();\r\n\r\n    // Save the generated PDF\r\n    const pdfName = `${formData.name.replace(/\\s+/g, '_')}_Resume.pdf`;\r\n    doc.save(pdfName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Preview</h2>\r\n      <div className=\"resume-preview\">\r\n        <h3>Personal Information</h3>\r\n        <p><strong>Name:</strong> {formData.name}</p>\r\n        <p><strong>Email:</strong> {formData.email}</p>\r\n        <p><strong>Mobile:</strong> {formData.mobile}</p>\r\n        <p><strong>LinkedIn:</strong> {formData.linkedin || 'N/A'}</p>\r\n        <p><strong>Location:</strong> {formData.location || ''}</p>\r\n\r\n        <h3>Profile Summary</h3>\r\n        <p>{formData.profileSummary}</p>\r\n\r\n        <h3>Skills</h3>\r\n        <ul>\r\n          {formData.skills.map((skill, index) => (\r\n            <li key={index}>{skill}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <h3>Experience</h3>\r\n        {formData.experience.map((exp, index) => (\r\n          <div key={index}>\r\n            <p><strong>{exp.company} - {exp.designation}</strong></p>\r\n            <p>{exp.joiningDate} to {exp.endDate}</p>\r\n            <p>{exp.role}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"form-buttons\">\r\n        <button onClick={prevStep}>Previous</button>\r\n        <button onClick={generatePDF}>Download PDF</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n","import React, { useState } from 'react';\r\nimport BasicDetails from './components/BasicDetails';\r\nimport ProfileSummary from './components/ProfileSummary';\r\nimport Experience from './components/Experience';\r\nimport Skills from './components/Skills';\r\nimport Preview from './components/Preview';\r\n\r\nfunction App() {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    mobile: '',\r\n    experience: [],\r\n    skills: [],\r\n  });\r\n\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => setStep(step - 1);\r\n\r\n  const handleFormData = (data) => setFormData({ ...formData, ...data });\r\n\r\n  switch (step) {\r\n    case 1:\r\n      return <BasicDetails nextStep={nextStep} handleFormData={handleFormData} formData={formData} />;\r\n    case 2:\r\n      return <ProfileSummary nextStep={nextStep} handleFormData={handleFormData} formData={formData} />;\r\n    case 3:\r\n      return <Experience nextStep={nextStep} prevStep={prevStep} handleFormData={handleFormData} formData={formData} />;\r\n    case 4:\r\n      return <Skills nextStep={nextStep} prevStep={prevStep} handleFormData={handleFormData} formData={formData} />;\r\n    case 5:\r\n      return <Preview prevStep={prevStep} formData={formData} />;\r\n    default:\r\n      return <BasicDetails nextStep={nextStep} handleFormData={handleFormData} formData={formData} />;\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';  // Import your stylesheet\r\nimport App from './App'; // Import the App component\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}